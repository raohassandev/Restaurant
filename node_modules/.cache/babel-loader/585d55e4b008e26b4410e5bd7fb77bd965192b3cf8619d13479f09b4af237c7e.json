{"ast":null,"code":"var _jsxFileName = \"/Users/israr/Desktop/Restaurants/webts/src/components/button/Button.tsx\";\n// import React from \"react\";\n\n// type ButtonProps = {\n//   label?: string;\n//   icon?: React.ReactNode;\n//   leftIcon?: React.ReactNode;\n//   rightIcon?: React.ReactNode;\n//   isLoading?: boolean;\n//   disabled?: boolean;\n//   onClick?: () => void;\n//   style?: React.CSSProperties;\n//   spread?: boolean\n// };\n\n// export const Button: React.FC<ButtonProps> = ({\n//   icon,\n//   label,\n//   leftIcon,\n//   rightIcon,\n//   isLoading = false,\n//   disabled = false,\n//   onClick,\n//   style,\n//   spread,\n// }) => {\n//   const buttonStyle: React.CSSProperties = {\n//     color: \"white\",\n//     fontWeight: \"bold\",\n//     justifyContent: spread ? \"center\" : \"initial\", // Adjust width based on the fullWidth prop\n\n//     ...style,\n//   };\n//   return (\n//     <button\n//       className={`btn btn-primary p-3 ${spread ? \"d-flex  w-100\" : \"p-3\"} ${isLoading ? \"disabled\" : \"\"}`}\n//       style={buttonStyle}\n//       onClick={!isLoading && !disabled ? onClick : undefined}>\n//       {icon ? (\n//         <span className=\"m-1\">{icon}</span>\n//       ) : (\n//         <div>\n//           {leftIcon && <span className=\"me-2\">{leftIcon}</span>}\n//           {isLoading && (\n//             <div className=\"spinner-border\" role=\"status\">\n//               <span className=\"visually-hidden\">Loading...</span>\n//             </div>\n//           )}\n//           {label && <div>{label}</div>}\n//           {rightIcon && <span className=\"ms-2\">{rightIcon}</span>}\n//         </div>\n//       )}\n//     </button>\n//   );\n// };\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  icon,\n  label,\n  leftIcon,\n  rightIcon,\n  isLoading = false,\n  disabled = false,\n  onClick,\n  style,\n  fullWidth = false,\n  // Default to false\n  width // Width of the button\n}) => {\n  const buttonStyle = {\n    color: \"white\",\n    fontWeight: \"bold\",\n    justifyContent: \"center\",\n    ...style\n  };\n  if (fullWidth) {\n    buttonStyle.width = \"100%\"; // Set the button to full width\n  } else if (width) {\n    buttonStyle.width = width; // Use the specified width\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `d-flex btn btn-primary ${isLoading ? \"disabled\" : \"\"}`,\n    style: buttonStyle,\n    onClick: !isLoading && !disabled ? onClick : undefined,\n    children: icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"m-1\",\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [leftIcon && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"me-2\",\n        children: leftIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 24\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), label && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), rightIcon && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ms-2\",\n        children: rightIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Button","icon","label","leftIcon","rightIcon","isLoading","disabled","onClick","style","fullWidth","width","buttonStyle","color","fontWeight","justifyContent","className","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["/Users/israr/Desktop/Restaurants/webts/src/components/button/Button.tsx"],"sourcesContent":["// import React from \"react\";\n\n// type ButtonProps = {\n//   label?: string;\n//   icon?: React.ReactNode;\n//   leftIcon?: React.ReactNode;\n//   rightIcon?: React.ReactNode;\n//   isLoading?: boolean;\n//   disabled?: boolean;\n//   onClick?: () => void;\n//   style?: React.CSSProperties;\n//   spread?: boolean\n// };\n\n// export const Button: React.FC<ButtonProps> = ({\n//   icon,\n//   label,\n//   leftIcon,\n//   rightIcon,\n//   isLoading = false,\n//   disabled = false,\n//   onClick,\n//   style,\n//   spread,\n// }) => {\n//   const buttonStyle: React.CSSProperties = {\n//     color: \"white\",\n//     fontWeight: \"bold\",\n//     justifyContent: spread ? \"center\" : \"initial\", // Adjust width based on the fullWidth prop\n\n//     ...style,\n//   };\n//   return (\n//     <button\n//       className={`btn btn-primary p-3 ${spread ? \"d-flex  w-100\" : \"p-3\"} ${isLoading ? \"disabled\" : \"\"}`}\n//       style={buttonStyle}\n//       onClick={!isLoading && !disabled ? onClick : undefined}>\n//       {icon ? (\n//         <span className=\"m-1\">{icon}</span>\n//       ) : (\n//         <div>\n//           {leftIcon && <span className=\"me-2\">{leftIcon}</span>}\n//           {isLoading && (\n//             <div className=\"spinner-border\" role=\"status\">\n//               <span className=\"visually-hidden\">Loading...</span>\n//             </div>\n//           )}\n//           {label && <div>{label}</div>}\n//           {rightIcon && <span className=\"ms-2\">{rightIcon}</span>}\n//         </div>\n//       )}\n//     </button>\n//   );\n// };\nimport React from \"react\";\n\ntype ButtonProps = {\n  label?: string;\n  icon?: React.ReactNode;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  isLoading?: boolean;\n  disabled?: boolean;\n  onClick?: () => void;\n  style?: React.CSSProperties;\n  fullWidth?: boolean; // New prop to determine if button should be full width\n  width?: string; // New prop to specify the button width\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n  icon,\n  label,\n  leftIcon,\n  rightIcon,\n  isLoading = false,\n  disabled = false,\n  onClick,\n  style,\n  fullWidth = false, // Default to false\n  width, // Width of the button\n}) => {\n  const buttonStyle: React.CSSProperties = {\n    color: \"white\",\n    fontWeight: \"bold\",\n    justifyContent: \"center\",\n    ...style,\n  };\n\n  if (fullWidth) {\n    buttonStyle.width = \"100%\"; // Set the button to full width\n  } else if (width) {\n    buttonStyle.width = width; // Use the specified width\n  }\n\n  return (\n    <button\n      className={`d-flex btn btn-primary ${isLoading ? \"disabled\" : \"\"}`}\n      style={buttonStyle}\n      onClick={!isLoading && !disabled ? onClick : undefined}>\n      {icon ? (\n        <span className=\"m-1\">{icon}</span>\n      ) : (\n        <div>\n          {leftIcon && <span className=\"me-2\">{leftIcon}</span>}\n          {isLoading && (\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          )}\n          {label && <div>{label}</div>}\n          {rightIcon && <span className=\"ms-2\">{rightIcon}</span>}\n        </div>\n      )}\n    </button>\n  );\n};\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe1B,OAAO,MAAMC,MAA6B,GAAGA,CAAC;EAC5CC,IAAI;EACJC,KAAK;EACLC,QAAQ;EACRC,SAAS;EACTC,SAAS,GAAG,KAAK;EACjBC,QAAQ,GAAG,KAAK;EAChBC,OAAO;EACPC,KAAK;EACLC,SAAS,GAAG,KAAK;EAAE;EACnBC,KAAK,CAAE;AACT,CAAC,KAAK;EACJ,MAAMC,WAAgC,GAAG;IACvCC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,MAAM;IAClBC,cAAc,EAAE,QAAQ;IACxB,GAAGN;EACL,CAAC;EAED,IAAIC,SAAS,EAAE;IACbE,WAAW,CAACD,KAAK,GAAG,MAAM,CAAC,CAAC;EAC9B,CAAC,MAAM,IAAIA,KAAK,EAAE;IAChBC,WAAW,CAACD,KAAK,GAAGA,KAAK,CAAC,CAAC;EAC7B;;EAEA,oBACEX,OAAA;IACEgB,SAAS,EAAG,0BAAyBV,SAAS,GAAG,UAAU,GAAG,EAAG,EAAE;IACnEG,KAAK,EAAEG,WAAY;IACnBJ,OAAO,EAAE,CAACF,SAAS,IAAI,CAACC,QAAQ,GAAGC,OAAO,GAAGS,SAAU;IAAAC,QAAA,EACtDhB,IAAI,gBACHF,OAAA;MAAMgB,SAAS,EAAC,KAAK;MAAAE,QAAA,EAAEhB;IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,gBAEnCtB,OAAA;MAAAkB,QAAA,GACGd,QAAQ,iBAAIJ,OAAA;QAAMgB,SAAS,EAAC,MAAM;QAAAE,QAAA,EAAEd;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACpDhB,SAAS,iBACRN,OAAA;QAAKgB,SAAS,EAAC,gBAAgB;QAACO,IAAI,EAAC,QAAQ;QAAAL,QAAA,eAC3ClB,OAAA;UAAMgB,SAAS,EAAC,iBAAiB;UAAAE,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CACN,EACAnB,KAAK,iBAAIH,OAAA;QAAAkB,QAAA,EAAMf;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC3BjB,SAAS,iBAAIL,OAAA;QAAMgB,SAAS,EAAC,MAAM;QAAAE,QAAA,EAAEb;MAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAACE,EAAA,GA9CWvB,MAA6B;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}