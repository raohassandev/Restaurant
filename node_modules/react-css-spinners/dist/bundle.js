(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('prop-types')) :
  typeof define === 'function' && define.amd ? define(['exports', 'react', 'prop-types'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactCssSpinners = {}, global.React, global.PropTypes));
}(this, (function (exports, React, PropTypes) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
  var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);

  const clsx = (...classes) => classes.filter(Boolean).join(' ');

  const Circle = ({
    className,
    color,
    size,
    style
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-circle-color'] = color);
    size && (varStyle['--rcs-circle-size'] = "".concat(size, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-circle', className),
      style: varStyle
    }, /*#__PURE__*/React__default['default'].createElement("div", null));
  };

  Circle.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object
  };

  const DualRing = ({
    className,
    color,
    size,
    style,
    thickness
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-dual-ring-color'] = color);
    size && (varStyle['--rcs-dual-ring-size'] = "".concat(size, "px"));
    thickness && (varStyle['--rcs-dual-ring-thickness'] = "".concat(thickness, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-dual-ring', className),
      style: varStyle
    });
  };

  DualRing.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object,
    thickness: PropTypes__default['default'].number
  };

  const Ellipsis = ({
    className,
    color,
    size,
    style
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-ellipsis-color'] = color);
    size && (varStyle['--rcs-ellipsis-size'] = "".concat(size, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-ellipsis', className),
      style: varStyle
    }, /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null));
  };

  Ellipsis.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object
  };

  const Grid = ({
    className,
    color,
    size,
    style
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-grid-color'] = color);
    size && (varStyle['--rcs-grid-size'] = "".concat(size, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-grid', className),
      style: varStyle
    }, /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null));
  };

  Grid.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object
  };

  const Hourglass = ({
    className,
    color,
    size,
    style
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-hourglass-color'] = color);
    size && (varStyle['--rcs-hourglass-size'] = "".concat(size, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-hourglass', className),
      style: varStyle
    });
  };

  Hourglass.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object
  };

  const Ring = ({
    className,
    color,
    size,
    style,
    thickness
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-ring-color'] = color);
    size && (varStyle['--rcs-ring-size'] = "".concat(size, "px"));
    thickness && (varStyle['--rcs-ring-thickness'] = "".concat(thickness, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-ring', className),
      style: varStyle
    }, /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null));
  };

  Ring.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object,
    thickness: PropTypes__default['default'].number
  };

  const Ripple = ({
    className,
    color,
    size,
    style,
    thickness
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-ripple-color'] = color);
    size && (varStyle['--rcs-ripple-size'] = "".concat(size, "px"));
    thickness && (varStyle['--rcs-ripple-thickness'] = "".concat(thickness, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-ripple', className),
      style: varStyle
    }, /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null));
  };

  Ripple.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object,
    thickness: PropTypes__default['default'].number
  };

  const Roller = ({
    className,
    color,
    size,
    style
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-roller-color'] = color);
    size && (varStyle['--rcs-roller-size'] = "".concat(size, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-roller', className),
      style: varStyle
    }, /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null));
  };

  Roller.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object
  };

  const Wave = ({
    className,
    color,
    size,
    style,
    thickness
  }) => {
    const varStyle = { ...style
    };
    color && (varStyle['--rcs-wave-color'] = color);
    size && (varStyle['--rcs-wave-size'] = "".concat(size, "px"));
    thickness && (varStyle['--rcs-wave-thickness'] = "".concat(thickness, "px"));
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: clsx('rcs-wave', className),
      style: varStyle
    }, /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null), /*#__PURE__*/React__default['default'].createElement("div", null));
  };

  Wave.propTypes = {
    className: PropTypes__default['default'].string,
    color: PropTypes__default['default'].string,
    size: PropTypes__default['default'].number,
    style: PropTypes__default['default'].object,
    thickness: PropTypes__default['default'].number
  };

  exports.Circle = Circle;
  exports.DualRing = DualRing;
  exports.Ellipsis = Ellipsis;
  exports.Grid = Grid;
  exports.Hourglass = Hourglass;
  exports.Ring = Ring;
  exports.Ripple = Ripple;
  exports.Roller = Roller;
  exports.Wave = Wave;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
